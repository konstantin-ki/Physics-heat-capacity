class ClassBuzzerType{constructor(_buzPin){this.name="ClassBuzzerType",this._BuzPin=void 0,this.Init(_buzPin)}static get ERROR_CODE_ARG_VALUE(){return 10}static get ERROR_MSG_ARG_VALUE(){return`ERROR>> invalid data. ClassID: ${this.name}`}Init(_buzPin){if(void 0===_buzPin)throw new err(ClassTypeBuzzer.ERROR_MSG_ARG_VALUE,ClassTypeBuzzer.ERROR_CODE_ARG_VALUE);if(!(_buzPin instanceof Pin))throw new err(ClassTypeBuzzer.ERROR_MSG_ARG_VALUE,ClassTypeBuzzer.ERROR_CODE_ARG_VALUE);this._BuzPin=_buzPin}}class ClassBuzzerTypePlay{constructor(_pulseDur,_numRep,_freq,_prop){this.name="ClassBuzzerTypePlay",this._PulseDur=void 0,this._NumRep=void 0,this._Freq=void 0,this._Proportions=void 0,this.Init(_pulseDur,_numRep,_freq,_prop)}static get ERROR_CODE_ARG_VALUE(){return 10}static get ERROR_MSG_ARG_VALUE(){return`ERROR>> invalid data. ClassID: ${this.name}`}Init(_pulseDur,_numRep,_freq,_prop){let pulsedur=_pulseDur||100,numrep=_numRep||1,freq=_freq||4e3,prop=_prop||.5;if("number"!=typeof pulsedur||"number"!=typeof numrep||"number"!=typeof freq||"number"!=typeof prop||!Number.isInteger(pulsedur)||!Number.isInteger(numrep)||!Number.isInteger(freq))throw new err(ClassTypeBuzzerPlay.ERROR_MSG_ARG_VALUE,ClassTypeBuzzerPlay.ERROR_CODE_ARG_VALUE);pulsedur<50&&(pulsedur=50),(prop<0||prop>1)&&(prop=.5),this._PulseDur=pulsedur,this._NumRep=numrep,this._Freq=freq,this._Proportions=prop}}class ClassBuzzer{constructor(_opt){if(this.name="ClassBuzzer",!(_opt instanceof ClassBuzzerType))throw new err(ClassBuzzer.ERROR_MSG_ARG_VALUE,ClassBuzzer.ERROR_CODE_ARG_VALUE);this._BuzPin=_opt._BuzPin}static get ERROR_CODE_ARG_VALUE(){return 10}static get ERROR_MSG_ARG_VALUE(){return`ERROR>> invalid data. ClassID: ${this.name}`}PlayBeep(_opt){if(!(_opt instanceof ClassBuzzerTypePlay))throw new ClassAppError(ClassBuzzer.ERROR_MSG_ARG_VALUE,ClassBuzzer.ERROR_CODE_ARG_VALUE);let Thi=_opt._PulseDur,Tlo=Math.floor(_opt._PulseDur*(1-_opt._Proportions)/_opt._Proportions),beep_count=2*_opt._NumRep,beep_flag=!0;analogWrite(this._BuzPin,.5,{freq:_opt._Freq});let beep_func=()=>{--beep_count,beep_count>0&&(beep_flag?(digitalWrite(this._BuzPin,beep_flag),setTimeout(beep_func,Tlo)):(analogWrite(this._BuzPin,.5,{freq:_opt._Freq}),setTimeout(beep_func,Thi)),beep_flag=!beep_flag)};setTimeout(beep_func,Thi)}}exports={ClassBuzzerType:ClassBuzzerType,ClassBuzzerTypePlay:ClassBuzzerTypePlay,ClassBuzzer:ClassBuzzer};